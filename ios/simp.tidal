
do
  d2
    $ off 0.125 (#hpf "200 400 800 1200")
    $ every 8 (chunk 2 (hurry 2))
    $ stack [
    every 4 (0.25 <~) $ s "[k(<3 3 5>,8,<0 1 2>), bmkd:2*2]",
    loopAt 1 $ chop "<8 12 16 32>"  $ sometimes (#sp "-2")
    $  s "breaks111" #gain 0.75,
    jux (iter 4) $ s "~ bmcp:2"  #n (irand 8) # sus 0.3 #rel 0.3 #gain 0.89,
    s "808:1*8" #pan rand #gain 0.82,
    s "stress:2 [~ stress:2] [~ stress:2] [~ stress:1]"  #speed 1.25 #shape 0.2,
    s "<krane:3 stress:1>" # speed "0.75" # sus 0.3 #rel 0.3 #gain "<0.82 1.02>"
    ]
  d3
    $ stut' 5 (0.125/2) (|*| gain "0.75" )
    $ almostNever (#acc "-0.2 1.2")
    $ struct ( slow "<1 2>" $ "{1 ~ [~ 1] ~ ~ 1 [~ 1] 1*2 }%4" )
    $ s "ser:2" #note ( (scale "neapolitanMinor" $ choose [ 0, 3,7,8,12]))
    # gain 0.89
    |+| note "-12"



d1
    $ sometimes (randDelay)
    $ rarely (off 0.125 (+| n "1 2"))
    $ sometimes (|+| note " <-12 12>")
    $ stut' 5 (0.125/2) (|*| gain "0.75" )
    $ note (slow "<1>" $ scale "neapolitanMinor"
      "{[[0,3] [3,7,12]] [-4, 0, 3] ~ ~ }%4" )
    -- # s "synthys:8"
    #s "ser:0"
    #lpf (choose [800, 810.. 2400])
    #lpq (choose [0.02, 0.04.. 0.16])
    #sus 0.2 #rel 0.2 #speed "[1, 1.02]"


d2
    $ iter "1 1 2 1"
    $ stack [
    slow "1" $ sometimes (fast 2) $ every 4 (0.25 <~) $ s "[k(<3 5>,8,<0 1 2>), bmkd:2*2]"
    #lpf 1800 #shape 0.4 #gain 0.88,
    slow 2 $ iter 4 $ s "~ bmcp:0 ~ cccp" #g 0.96,
    jux rev $ s "007kit1:3*16?" #cutoff 1800 #pan (range 0.5 1 $ sine*2) #sp (range 1 4 $ sine*0.5)
    #g 0.9
    ]


d5 $ loopAt 2
    $ modFunc'
    $ s "Lyre:4"
    #acc "-0.2 0.2"
    # sp "[1 2 0.5 3]/4"
    |*| sp "[1, 1.02]"
    # gain 0.6

d3
$ degradeBy 0.11
$ modFunc'
$ struct (fast "2" $ "{1 [~ 1] ~ 1 ~ [ 1] 1*2 ~}%4" )
$ s "ser:1" #note "<12 24>" #speed "[1,1.02]"
  # gain 1.1


d4
  $ struct "t(7,8,<0 12 2>)?"
  $ s "Lyre:9"
  # sus 0.2 #rel 0.4
  #acc "-0.2 0.2"
  # sp "[1 0.75 0.5 3]/4"
  #pan (range 0.25 0.75 $ rand)



d5 $ s "speech(3,8)" #n (irand 16)
#speed "-1.5"
